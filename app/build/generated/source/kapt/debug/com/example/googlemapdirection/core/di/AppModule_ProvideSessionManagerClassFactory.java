// Generated by Dagger (https://dagger.dev).
package com.example.googlemapdirection.core.di;

import android.content.Context;
import com.example.googlemapdirection.utils.SessionManagerClass;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata("dagger.hilt.android.qualifiers.ApplicationContext")
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class AppModule_ProvideSessionManagerClassFactory implements Factory<SessionManagerClass> {
  private final Provider<Context> appContextProvider;

  public AppModule_ProvideSessionManagerClassFactory(Provider<Context> appContextProvider) {
    this.appContextProvider = appContextProvider;
  }

  @Override
  public SessionManagerClass get() {
    return provideSessionManagerClass(appContextProvider.get());
  }

  public static AppModule_ProvideSessionManagerClassFactory create(
      Provider<Context> appContextProvider) {
    return new AppModule_ProvideSessionManagerClassFactory(appContextProvider);
  }

  public static SessionManagerClass provideSessionManagerClass(Context appContext) {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.provideSessionManagerClass(appContext));
  }
}
